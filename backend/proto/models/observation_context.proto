syntax = "proto3";

import "proto/models/source.proto";
import "proto/models/temporal.proto";


option go_package = "epistemic-me-backend/pb/models";

// Enum for the type of input
enum InputType {
    HABIT = 0;
    BELIEF_SYSTEM_OUTPUT = 1;
    CAUSAL_BELIEF = 2;
}

// Message representing an input for an observation context
message Input {
    string name = 1;        // Name of the input
    InputType type = 2;     // Type of the input
    oneof input_detail {
        int32 habit_id = 3;            // Reference to a habit
        int32 belief_system_id = 4;    // Reference to a belief system output
        int32 causal_belief_id = 5;    // Reference to a specific causal belief
    }
}

// Enum for the type of output
enum OutputType {
    RESOURCE = 0;
    NEW_HABIT = 1;
    NEW_CAUSAL_BELIEF = 2;
}

// Message representing an output for an observation context
message Output {
    string name = 1;        // Name of the output
    OutputType type = 2;    // Type of the output
    oneof output_detail {
        Resource resource = 3;         // Reference to a resource
        int32 new_habit_id = 4;        // Reference to a new habit
        int32 new_causal_belief_id = 5; // Reference to a new causal belief
    }
}

// Message representing an observation context
message ObservationContext {
    int32 id = 1;
    string name = 2;
    string description = 3;
    repeated PossibleState possible_states = 4;
    repeated ConditionalProbability conditional_probabilities = 5; // Conditional probabilities
    repeated Input inputs = 6; // Inputs for this context
    repeated Output outputs = 7; // Outputs for this context
    TemporalInformation temporal_information = 8; // Temporal information
}

// Message representing a possible state for an observation context
message PossibleState {
    int32 id = 1;
    int32 context_id = 2;
    string state = 3;
    string description = 4;
}

// A Conditional probability represents the probabilty that a
// state transition occurs given that a given intervention has taken place
// 
message ConditionalProbability {
    int32 id = 1;
    int32 initial_state_id = 2; // a state type that is being monitored by an observation context. Indicates the first state in the transition T: S0-S1
    int32 resulting_state_id = 5; // a state type that is being monitored by an observation context. Indicates the second state in the transition T: S0->S1
    int32 intervention_id = 3; // The intervention that the condition probability is modeling i.e I in P(T|I)
    string intervention_name = 4; // External name for the intervention
    float probability = 6; // The actual probability of the conditianal probability
    string description = 7; // Should fit the form of "Given intervention {intervention_id}, there is a {probability} chance there is a transition from {initial_state_id} to {resulting_state_id}"
}
