// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.0
// source: proto/models/dialectic.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The Dialectic Type informs the "strategy" of how the
// agent will attempt to generate questions and interpret beliefs
// from the user's responses.
type DialecticType int32

const (
	DialecticType_DIALECTIC_TYPE_INVALID DialecticType = 0 // Invalid dialectic type.
	DialecticType_DEFAULT                DialecticType = 1 // Default dialectic strategy.
	DialecticType_HEGELIAN               DialecticType = 2 // Hegelian dialectic strategy.
)

// Enum value maps for DialecticType.
var (
	DialecticType_name = map[int32]string{
		0: "DIALECTIC_TYPE_INVALID",
		1: "DEFAULT",
		2: "HEGELIAN",
	}
	DialecticType_value = map[string]int32{
		"DIALECTIC_TYPE_INVALID": 0,
		"DEFAULT":                1,
		"HEGELIAN":               2,
	}
)

func (x DialecticType) Enum() *DialecticType {
	p := new(DialecticType)
	*p = x
	return p
}

func (x DialecticType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DialecticType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_models_dialectic_proto_enumTypes[0].Descriptor()
}

func (DialecticType) Type() protoreflect.EnumType {
	return &file_proto_models_dialectic_proto_enumTypes[0]
}

func (x DialecticType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DialecticType.Descriptor instead.
func (DialecticType) EnumDescriptor() ([]byte, []int) {
	return file_proto_models_dialectic_proto_rawDescGZIP(), []int{0}
}

// Represents the states of user interaction
// within a specific dialectical interaction.
type DialecticalInteraction_STATUS int32

const (
	DialecticalInteraction_STATUS_INVALID        DialecticalInteraction_STATUS = 0 // Invalid status.
	DialecticalInteraction_STATUS_PENDING_ANSWER DialecticalInteraction_STATUS = 1 // Waiting for an answer.
	DialecticalInteraction_STATUS_ANSWERED       DialecticalInteraction_STATUS = 2 // Answer has been provided.
)

// Enum value maps for DialecticalInteraction_STATUS.
var (
	DialecticalInteraction_STATUS_name = map[int32]string{
		0: "STATUS_INVALID",
		1: "STATUS_PENDING_ANSWER",
		2: "STATUS_ANSWERED",
	}
	DialecticalInteraction_STATUS_value = map[string]int32{
		"STATUS_INVALID":        0,
		"STATUS_PENDING_ANSWER": 1,
		"STATUS_ANSWERED":       2,
	}
)

func (x DialecticalInteraction_STATUS) Enum() *DialecticalInteraction_STATUS {
	p := new(DialecticalInteraction_STATUS)
	*p = x
	return p
}

func (x DialecticalInteraction_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DialecticalInteraction_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_models_dialectic_proto_enumTypes[1].Descriptor()
}

func (DialecticalInteraction_STATUS) Type() protoreflect.EnumType {
	return &file_proto_models_dialectic_proto_enumTypes[1]
}

func (x DialecticalInteraction_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DialecticalInteraction_STATUS.Descriptor instead.
func (DialecticalInteraction_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_proto_models_dialectic_proto_rawDescGZIP(), []int{2, 0}
}

// Labels the system that is driving the agent's behavior.
// This may include generating the question, synthesizing
// the user's answers into beliefs, and then synthesizing
// the user's supposed beliefs into a belief system
// that can be used for further generations.
type Agent_AgentType int32

const (
	Agent_AGENT_TYPE_INVALID    Agent_AgentType = 0 // Invalid agent type.
	Agent_AGENT_TYPE_GPT_LATEST Agent_AgentType = 1 // Latest GPT model.
)

// Enum value maps for Agent_AgentType.
var (
	Agent_AgentType_name = map[int32]string{
		0: "AGENT_TYPE_INVALID",
		1: "AGENT_TYPE_GPT_LATEST",
	}
	Agent_AgentType_value = map[string]int32{
		"AGENT_TYPE_INVALID":    0,
		"AGENT_TYPE_GPT_LATEST": 1,
	}
)

func (x Agent_AgentType) Enum() *Agent_AgentType {
	p := new(Agent_AgentType)
	*p = x
	return p
}

func (x Agent_AgentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Agent_AgentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_models_dialectic_proto_enumTypes[2].Descriptor()
}

func (Agent_AgentType) Type() protoreflect.EnumType {
	return &file_proto_models_dialectic_proto_enumTypes[2]
}

func (x Agent_AgentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Agent_AgentType.Descriptor instead.
func (Agent_AgentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_models_dialectic_proto_rawDescGZIP(), []int{3, 0}
}

// A Question represents a request for information
// from a user. The intent behind a question is to extract
// beliefs from the end user in the form of an answer.
// This data model may evolve in the future to track
// the origination of how the question is generated,
// as well as a "dialectical context" of which beliefs
// the agent is attempting to extract from the user.
type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question           string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`                                                    // The text of the question.
	CreatedAtMillisUtc int64  `protobuf:"varint,2,opt,name=created_at_millis_utc,json=createdAtMillisUtc,proto3" json:"created_at_millis_utc,omitempty"` // Timestamp when the question was created.
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_dialectic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_dialectic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_proto_models_dialectic_proto_rawDescGZIP(), []int{0}
}

func (x *Question) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Question) GetCreatedAtMillisUtc() int64 {
	if x != nil {
		return x.CreatedAtMillisUtc
	}
	return 0
}

// A User Answer is a response to a question that
// may or may not contain an embedded belief, which can be
// extracted at a later point in time.
type UserAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAnswer         string `protobuf:"bytes,1,opt,name=user_answer,json=userAnswer,proto3" json:"user_answer,omitempty"`                              // The text of the user's answer.
	CreatedAtMillisUtc int64  `protobuf:"varint,2,opt,name=created_at_millis_utc,json=createdAtMillisUtc,proto3" json:"created_at_millis_utc,omitempty"` // Timestamp when the answer was created.
}

func (x *UserAnswer) Reset() {
	*x = UserAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_dialectic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAnswer) ProtoMessage() {}

func (x *UserAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_dialectic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAnswer.ProtoReflect.Descriptor instead.
func (*UserAnswer) Descriptor() ([]byte, []int) {
	return file_proto_models_dialectic_proto_rawDescGZIP(), []int{1}
}

func (x *UserAnswer) GetUserAnswer() string {
	if x != nil {
		return x.UserAnswer
	}
	return ""
}

func (x *UserAnswer) GetCreatedAtMillisUtc() int64 {
	if x != nil {
		return x.CreatedAtMillisUtc
	}
	return 0
}

// A Dialectical Interaction tracks a question
// and a response to the question. It also tracks
// the beliefs that may be generated and seen as being
// extracted from the interaction.
type DialecticalInteraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question           *Question   `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`                                                    // The question in the interaction.
	UserAnswer         *UserAnswer `protobuf:"bytes,2,opt,name=userAnswer,proto3" json:"userAnswer,omitempty"`                                                // The user's answer in the interaction.
	Beliefs            []*Belief   `protobuf:"bytes,3,rep,name=beliefs,proto3" json:"beliefs,omitempty"`                                                      // Beliefs extracted from the interaction.
	UpdatedAtMillisUtc int64       `protobuf:"varint,4,opt,name=updated_at_millis_utc,json=updatedAtMillisUtc,proto3" json:"updated_at_millis_utc,omitempty"` // Timestamp when the interaction was last updated.
}

func (x *DialecticalInteraction) Reset() {
	*x = DialecticalInteraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_dialectic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialecticalInteraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialecticalInteraction) ProtoMessage() {}

func (x *DialecticalInteraction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_dialectic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialecticalInteraction.ProtoReflect.Descriptor instead.
func (*DialecticalInteraction) Descriptor() ([]byte, []int) {
	return file_proto_models_dialectic_proto_rawDescGZIP(), []int{2}
}

func (x *DialecticalInteraction) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

func (x *DialecticalInteraction) GetUserAnswer() *UserAnswer {
	if x != nil {
		return x.UserAnswer
	}
	return nil
}

func (x *DialecticalInteraction) GetBeliefs() []*Belief {
	if x != nil {
		return x.Beliefs
	}
	return nil
}

func (x *DialecticalInteraction) GetUpdatedAtMillisUtc() int64 {
	if x != nil {
		return x.UpdatedAtMillisUtc
	}
	return 0
}

// The agent represents information about what underlying
// system or user is responsible for interacting with the
// user throughout the dialectic. This is intended to
// be some AI system (e.g., LLM) but may evolve to be a human
// user in the future.
type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentType     Agent_AgentType `protobuf:"varint,1,opt,name=agent_type,json=agentType,proto3,enum=Agent_AgentType" json:"agent_type,omitempty"`           // The type of the agent.
	DialecticType DialecticType   `protobuf:"varint,2,opt,name=dialectic_type,json=dialecticType,proto3,enum=DialecticType" json:"dialectic_type,omitempty"` // The dialectic strategy used by the agent.
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_dialectic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_dialectic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_proto_models_dialectic_proto_rawDescGZIP(), []int{3}
}

func (x *Agent) GetAgentType() Agent_AgentType {
	if x != nil {
		return x.AgentType
	}
	return Agent_AGENT_TYPE_INVALID
}

func (x *Agent) GetDialecticType() DialecticType {
	if x != nil {
		return x.DialecticType
	}
	return DialecticType_DIALECTIC_TYPE_INVALID
}

// The dialectic can be seen as a session that gets created
// and presents a user with a series of questions designed to
// determine and clarify the user's beliefs. The beliefs produced
// as part of the dialectic may or may not be fed into the user's
// underlying belief system.
type Dialectic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier for the dialectic.
	// The user who the dialectic is "serving" in the sense
	// of who questions are being presented to and whose answers
	// represent the beliefs.
	UserId           string                    `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Agent            *Agent                    `protobuf:"bytes,3,opt,name=agent,proto3" json:"agent,omitempty"`                                               // The agent conducting the dialectic.
	UserInteractions []*DialecticalInteraction `protobuf:"bytes,4,rep,name=user_interactions,json=userInteractions,proto3" json:"user_interactions,omitempty"` // Interactions within the dialectic.
}

func (x *Dialectic) Reset() {
	*x = Dialectic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_dialectic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dialectic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialectic) ProtoMessage() {}

func (x *Dialectic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_dialectic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialectic.ProtoReflect.Descriptor instead.
func (*Dialectic) Descriptor() ([]byte, []int) {
	return file_proto_models_dialectic_proto_rawDescGZIP(), []int{4}
}

func (x *Dialectic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dialectic) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Dialectic) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *Dialectic) GetUserInteractions() []*DialecticalInteraction {
	if x != nil {
		return x.UserInteractions
	}
	return nil
}

var File_proto_models_dialectic_proto protoreflect.FileDescriptor

var file_proto_models_dialectic_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x64,
	0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x65, 0x6c,
	0x69, 0x65, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x08, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x55, 0x74, 0x63, 0x22, 0x60, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x55, 0x74, 0x63, 0x22, 0x90, 0x02, 0x0a, 0x16, 0x44, 0x69, 0x61, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x07, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66,
	0x52, 0x07, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x5f, 0x75,
	0x74, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x55, 0x74, 0x63, 0x22, 0x4c, 0x0a, 0x06,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4e, 0x53,
	0x57, 0x45, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x64,
	0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x09,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x47, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x47, 0x50, 0x54, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x54, 0x10, 0x01, 0x22, 0x98, 0x01, 0x0a,
	0x09, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x44, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x46, 0x0a, 0x0d, 0x44, 0x69, 0x61, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x49, 0x41, 0x4c,
	0x45, 0x43, 0x54, 0x49, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x45, 0x47, 0x45, 0x4c, 0x49, 0x41, 0x4e, 0x10, 0x02, 0x42,
	0x20, 0x5a, 0x1e, 0x65, 0x70, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x69, 0x63, 0x2d, 0x6d, 0x65, 0x2d,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_models_dialectic_proto_rawDescOnce sync.Once
	file_proto_models_dialectic_proto_rawDescData = file_proto_models_dialectic_proto_rawDesc
)

func file_proto_models_dialectic_proto_rawDescGZIP() []byte {
	file_proto_models_dialectic_proto_rawDescOnce.Do(func() {
		file_proto_models_dialectic_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_models_dialectic_proto_rawDescData)
	})
	return file_proto_models_dialectic_proto_rawDescData
}

var file_proto_models_dialectic_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_models_dialectic_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_models_dialectic_proto_goTypes = []any{
	(DialecticType)(0),                 // 0: DialecticType
	(DialecticalInteraction_STATUS)(0), // 1: DialecticalInteraction.STATUS
	(Agent_AgentType)(0),               // 2: Agent.AgentType
	(*Question)(nil),                   // 3: Question
	(*UserAnswer)(nil),                 // 4: UserAnswer
	(*DialecticalInteraction)(nil),     // 5: DialecticalInteraction
	(*Agent)(nil),                      // 6: Agent
	(*Dialectic)(nil),                  // 7: Dialectic
	(*Belief)(nil),                     // 8: Belief
}
var file_proto_models_dialectic_proto_depIdxs = []int32{
	3, // 0: DialecticalInteraction.question:type_name -> Question
	4, // 1: DialecticalInteraction.userAnswer:type_name -> UserAnswer
	8, // 2: DialecticalInteraction.beliefs:type_name -> Belief
	2, // 3: Agent.agent_type:type_name -> Agent.AgentType
	0, // 4: Agent.dialectic_type:type_name -> DialecticType
	6, // 5: Dialectic.agent:type_name -> Agent
	5, // 6: Dialectic.user_interactions:type_name -> DialecticalInteraction
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_models_dialectic_proto_init() }
func file_proto_models_dialectic_proto_init() {
	if File_proto_models_dialectic_proto != nil {
		return
	}
	file_proto_models_beliefs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_models_dialectic_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_models_dialectic_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UserAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_models_dialectic_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DialecticalInteraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_models_dialectic_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_models_dialectic_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Dialectic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_models_dialectic_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_models_dialectic_proto_goTypes,
		DependencyIndexes: file_proto_models_dialectic_proto_depIdxs,
		EnumInfos:         file_proto_models_dialectic_proto_enumTypes,
		MessageInfos:      file_proto_models_dialectic_proto_msgTypes,
	}.Build()
	File_proto_models_dialectic_proto = out.File
	file_proto_models_dialectic_proto_rawDesc = nil
	file_proto_models_dialectic_proto_goTypes = nil
	file_proto_models_dialectic_proto_depIdxs = nil
}
