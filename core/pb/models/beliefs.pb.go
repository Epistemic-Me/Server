// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: proto/models/beliefs.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum to distinguish between causal and statement beliefs
type BeliefType int32

const (
	BeliefType_CAUSAL    BeliefType = 0
	BeliefType_STATEMENT BeliefType = 1
)

// Enum value maps for BeliefType.
var (
	BeliefType_name = map[int32]string{
		0: "CAUSAL",
		1: "STATEMENT",
	}
	BeliefType_value = map[string]int32{
		"CAUSAL":    0,
		"STATEMENT": 1,
	}
)

func (x BeliefType) Enum() *BeliefType {
	p := new(BeliefType)
	*p = x
	return p
}

func (x BeliefType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeliefType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_models_beliefs_proto_enumTypes[0].Descriptor()
}

func (BeliefType) Type() protoreflect.EnumType {
	return &file_proto_models_beliefs_proto_enumTypes[0]
}

func (x BeliefType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BeliefType.Descriptor instead.
func (BeliefType) EnumDescriptor() ([]byte, []int) {
	return file_proto_models_beliefs_proto_rawDescGZIP(), []int{0}
}

// A confidence rating on a belief represents
// a score that determines how likely the system
// evaluates the belief to be given available evidence.
type ConfidenceRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfidenceScore float64 `protobuf:"fixed64,1,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"` // The confidence score of the belief.
	Default         bool    `protobuf:"varint,2,opt,name=default,proto3" json:"default,omitempty"`                                         // Whether this confidence rating is the default.
}

func (x *ConfidenceRating) Reset() {
	*x = ConfidenceRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_beliefs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfidenceRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfidenceRating) ProtoMessage() {}

func (x *ConfidenceRating) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_beliefs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfidenceRating.ProtoReflect.Descriptor instead.
func (*ConfidenceRating) Descriptor() ([]byte, []int) {
	return file_proto_models_beliefs_proto_rawDescGZIP(), []int{0}
}

func (x *ConfidenceRating) GetConfidenceScore() float64 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *ConfidenceRating) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

// The content of a belief represents
// what that belief is about, through
// natural language.
type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawStr string `protobuf:"bytes,1,opt,name=raw_str,json=rawStr,proto3" json:"raw_str,omitempty"` // The raw string representation of the belief content.
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_beliefs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_beliefs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_proto_models_beliefs_proto_rawDescGZIP(), []int{1}
}

func (x *Content) GetRawStr() string {
	if x != nil {
		return x.RawStr
	}
	return ""
}

// Message representing a belief
type Belief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                              // Unique identifier for the belief.
	UserId              string               `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                        // Identifier for the user who holds the belief.
	Version             int32                `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`                                                   // Version number of the belief.
	ConfidenceRatings   []*ConfidenceRating  `protobuf:"bytes,4,rep,name=confidence_ratings,json=confidenceRatings,proto3" json:"confidence_ratings,omitempty"`       // Confidence ratings of the belief.
	Sources             []*Source            `protobuf:"bytes,5,rep,name=sources,proto3" json:"sources,omitempty"`                                                    // Sources from which the belief is derived.
	Content             []*Content           `protobuf:"bytes,6,rep,name=content,proto3" json:"content,omitempty"`                                                    // Content of the belief.
	Type                BeliefType           `protobuf:"varint,7,opt,name=type,proto3,enum=BeliefType" json:"type,omitempty"`                                         // Type of the belief.
	CausalBelief        *Belief_CausalBelief `protobuf:"bytes,8,opt,name=causal_belief,json=causalBelief,proto3" json:"causal_belief,omitempty"`                      // Optional field for causal beliefs.
	TemporalInformation *TemporalInformation `protobuf:"bytes,9,opt,name=temporal_information,json=temporalInformation,proto3" json:"temporal_information,omitempty"` // Temporal information
}

func (x *Belief) Reset() {
	*x = Belief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_beliefs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Belief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Belief) ProtoMessage() {}

func (x *Belief) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_beliefs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Belief.ProtoReflect.Descriptor instead.
func (*Belief) Descriptor() ([]byte, []int) {
	return file_proto_models_beliefs_proto_rawDescGZIP(), []int{2}
}

func (x *Belief) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Belief) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Belief) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Belief) GetConfidenceRatings() []*ConfidenceRating {
	if x != nil {
		return x.ConfidenceRatings
	}
	return nil
}

func (x *Belief) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Belief) GetContent() []*Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Belief) GetType() BeliefType {
	if x != nil {
		return x.Type
	}
	return BeliefType_CAUSAL
}

func (x *Belief) GetCausalBelief() *Belief_CausalBelief {
	if x != nil {
		return x.CausalBelief
	}
	return nil
}

func (x *Belief) GetTemporalInformation() *TemporalInformation {
	if x != nil {
		return x.TemporalInformation
	}
	return nil
}

// A belief system represents a quick synthesis of a user's
// beliefs into a compressed natural language representation
// of the user's worldview. This belief system can be used
// to initiate further dialectical questions to gain better
// understanding of a user's beliefs.
type BeliefSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawStr                  string  `protobuf:"bytes,1,opt,name=raw_str,json=rawStr,proto3" json:"raw_str,omitempty"`                                                        // The raw string representation of the belief system.
	OverallConfidenceRating float64 `protobuf:"fixed64,2,opt,name=overall_confidence_rating,json=overallConfidenceRating,proto3" json:"overall_confidence_rating,omitempty"` // Overall confidence rating produced as a result of all beliefs it summarizes
	ClarificationScore      float64 `protobuf:"fixed64,3,opt,name=clarification_score,json=clarificationScore,proto3" json:"clarification_score,omitempty"`                  // Score indicating how much beliefs conflict with each other
}

func (x *BeliefSystem) Reset() {
	*x = BeliefSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_beliefs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeliefSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeliefSystem) ProtoMessage() {}

func (x *BeliefSystem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_beliefs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeliefSystem.ProtoReflect.Descriptor instead.
func (*BeliefSystem) Descriptor() ([]byte, []int) {
	return file_proto_models_beliefs_proto_rawDescGZIP(), []int{3}
}

func (x *BeliefSystem) GetRawStr() string {
	if x != nil {
		return x.RawStr
	}
	return ""
}

func (x *BeliefSystem) GetOverallConfidenceRating() float64 {
	if x != nil {
		return x.OverallConfidenceRating
	}
	return 0
}

func (x *BeliefSystem) GetClarificationScore() float64 {
	if x != nil {
		return x.ClarificationScore
	}
	return 0
}

// Nested message for causal belief details
type Belief_CausalBelief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterventionId         int32  `protobuf:"varint,1,opt,name=intervention_id,json=interventionId,proto3" json:"intervention_id,omitempty"`
	InterventionName       string `protobuf:"bytes,2,opt,name=intervention_name,json=interventionName,proto3" json:"intervention_name,omitempty"` // External name for the intervention
	ObservationContextId   int32  `protobuf:"varint,3,opt,name=observation_context_id,json=observationContextId,proto3" json:"observation_context_id,omitempty"`
	ObservationContextName string `protobuf:"bytes,4,opt,name=observation_context_name,json=observationContextName,proto3" json:"observation_context_name,omitempty"` // External name for the observation context
}

func (x *Belief_CausalBelief) Reset() {
	*x = Belief_CausalBelief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_models_beliefs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Belief_CausalBelief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Belief_CausalBelief) ProtoMessage() {}

func (x *Belief_CausalBelief) ProtoReflect() protoreflect.Message {
	mi := &file_proto_models_beliefs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Belief_CausalBelief.ProtoReflect.Descriptor instead.
func (*Belief_CausalBelief) Descriptor() ([]byte, []int) {
	return file_proto_models_beliefs_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Belief_CausalBelief) GetInterventionId() int32 {
	if x != nil {
		return x.InterventionId
	}
	return 0
}

func (x *Belief_CausalBelief) GetInterventionName() string {
	if x != nil {
		return x.InterventionName
	}
	return ""
}

func (x *Belief_CausalBelief) GetObservationContextId() int32 {
	if x != nil {
		return x.ObservationContextId
	}
	return 0
}

func (x *Belief_CausalBelief) GetObservationContextName() string {
	if x != nil {
		return x.ObservationContextName
	}
	return ""
}

var File_proto_models_beliefs_proto protoreflect.FileDescriptor

var file_proto_models_beliefs_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62,
	0x65, 0x6c, 0x69, 0x65, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x22, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x77, 0x53, 0x74,
	0x72, 0x22, 0xd0, 0x04, 0x0a, 0x06, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x61, 0x75,
	0x73, 0x61, 0x6c, 0x5f, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c,
	0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x52, 0x0c, 0x63, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x42, 0x65,
	0x6c, 0x69, 0x65, 0x66, 0x12, 0x47, 0x0a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd4, 0x01,
	0x0a, 0x0c, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x12, 0x27,
	0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x74, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x77, 0x53, 0x74, 0x72, 0x12, 0x3a,
	0x0a, 0x19, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x17, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6c,
	0x61, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x63, 0x6c, 0x61, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x2a, 0x27, 0x0a, 0x0a, 0x42,
	0x65, 0x6c, 0x69, 0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x55,
	0x53, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x42, 0x20, 0x5a, 0x1e, 0x65, 0x70, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x69,
	0x63, 0x2d, 0x6d, 0x65, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x62, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_models_beliefs_proto_rawDescOnce sync.Once
	file_proto_models_beliefs_proto_rawDescData = file_proto_models_beliefs_proto_rawDesc
)

func file_proto_models_beliefs_proto_rawDescGZIP() []byte {
	file_proto_models_beliefs_proto_rawDescOnce.Do(func() {
		file_proto_models_beliefs_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_models_beliefs_proto_rawDescData)
	})
	return file_proto_models_beliefs_proto_rawDescData
}

var file_proto_models_beliefs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_models_beliefs_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_models_beliefs_proto_goTypes = []interface{}{
	(BeliefType)(0),             // 0: BeliefType
	(*ConfidenceRating)(nil),    // 1: ConfidenceRating
	(*Content)(nil),             // 2: Content
	(*Belief)(nil),              // 3: Belief
	(*BeliefSystem)(nil),        // 4: BeliefSystem
	(*Belief_CausalBelief)(nil), // 5: Belief.CausalBelief
	(*Source)(nil),              // 6: Source
	(*TemporalInformation)(nil), // 7: TemporalInformation
}
var file_proto_models_beliefs_proto_depIdxs = []int32{
	1, // 0: Belief.confidence_ratings:type_name -> ConfidenceRating
	6, // 1: Belief.sources:type_name -> Source
	2, // 2: Belief.content:type_name -> Content
	0, // 3: Belief.type:type_name -> BeliefType
	5, // 4: Belief.causal_belief:type_name -> Belief.CausalBelief
	7, // 5: Belief.temporal_information:type_name -> TemporalInformation
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_models_beliefs_proto_init() }
func file_proto_models_beliefs_proto_init() {
	if File_proto_models_beliefs_proto != nil {
		return
	}
	file_proto_models_source_proto_init()
	file_proto_models_temporal_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_models_beliefs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfidenceRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_models_beliefs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_models_beliefs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Belief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_models_beliefs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeliefSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_models_beliefs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Belief_CausalBelief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_models_beliefs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_models_beliefs_proto_goTypes,
		DependencyIndexes: file_proto_models_beliefs_proto_depIdxs,
		EnumInfos:         file_proto_models_beliefs_proto_enumTypes,
		MessageInfos:      file_proto_models_beliefs_proto_msgTypes,
	}.Build()
	File_proto_models_beliefs_proto = out.File
	file_proto_models_beliefs_proto_rawDesc = nil
	file_proto_models_beliefs_proto_goTypes = nil
	file_proto_models_beliefs_proto_depIdxs = nil
}
