// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: proto/epistemic_me.proto

package pb

import (
	models "epistemic-me-backend/pb/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for listing beliefs.
type ListBeliefsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModelId string   `protobuf:"bytes,1,opt,name=self_model_id,json=selfModelId,proto3" json:"self_model_id,omitempty"`
	BeliefIds   []string `protobuf:"bytes,2,rep,name=belief_ids,json=beliefIds,proto3" json:"belief_ids,omitempty"` // TODO (@deen): Allow filtering by belief attributes / types.
}

func (x *ListBeliefsRequest) Reset() {
	*x = ListBeliefsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeliefsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeliefsRequest) ProtoMessage() {}

func (x *ListBeliefsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeliefsRequest.ProtoReflect.Descriptor instead.
func (*ListBeliefsRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{0}
}

func (x *ListBeliefsRequest) GetSelfModelId() string {
	if x != nil {
		return x.SelfModelId
	}
	return ""
}

func (x *ListBeliefsRequest) GetBeliefIds() []string {
	if x != nil {
		return x.BeliefIds
	}
	return nil
}

// Response message for listing beliefs.
type ListBeliefsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beliefs      []*models.Belief     `protobuf:"bytes,1,rep,name=beliefs,proto3" json:"beliefs,omitempty"`
	BeliefSystem *models.BeliefSystem `protobuf:"bytes,2,opt,name=belief_system,json=beliefSystem,proto3" json:"belief_system,omitempty"`
}

func (x *ListBeliefsResponse) Reset() {
	*x = ListBeliefsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeliefsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeliefsResponse) ProtoMessage() {}

func (x *ListBeliefsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeliefsResponse.ProtoReflect.Descriptor instead.
func (*ListBeliefsResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{1}
}

func (x *ListBeliefsResponse) GetBeliefs() []*models.Belief {
	if x != nil {
		return x.Beliefs
	}
	return nil
}

func (x *ListBeliefsResponse) GetBeliefSystem() *models.BeliefSystem {
	if x != nil {
		return x.BeliefSystem
	}
	return nil
}

// Request message for creating a new belief.
type CreateBeliefRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModelId   string            `protobuf:"bytes,1,opt,name=self_model_id,json=selfModelId,proto3" json:"self_model_id,omitempty"`
	BeliefContent string            `protobuf:"bytes,2,opt,name=belief_content,json=beliefContent,proto3" json:"belief_content,omitempty"`
	BeliefType    models.BeliefType `protobuf:"varint,3,opt,name=belief_type,json=beliefType,proto3,enum=BeliefType" json:"belief_type,omitempty"`
	// Types that are assignable to Evidence:
	//
	//	*CreateBeliefRequest_HypothesisEvidence
	//	*CreateBeliefRequest_ActionOutcome
	Evidence isCreateBeliefRequest_Evidence `protobuf_oneof:"evidence"`
}

func (x *CreateBeliefRequest) Reset() {
	*x = CreateBeliefRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeliefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeliefRequest) ProtoMessage() {}

func (x *CreateBeliefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeliefRequest.ProtoReflect.Descriptor instead.
func (*CreateBeliefRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBeliefRequest) GetSelfModelId() string {
	if x != nil {
		return x.SelfModelId
	}
	return ""
}

func (x *CreateBeliefRequest) GetBeliefContent() string {
	if x != nil {
		return x.BeliefContent
	}
	return ""
}

func (x *CreateBeliefRequest) GetBeliefType() models.BeliefType {
	if x != nil {
		return x.BeliefType
	}
	return models.BeliefType(0)
}

func (m *CreateBeliefRequest) GetEvidence() isCreateBeliefRequest_Evidence {
	if m != nil {
		return m.Evidence
	}
	return nil
}

func (x *CreateBeliefRequest) GetHypothesisEvidence() *models.HypothesisEvidenceInteraction {
	if x, ok := x.GetEvidence().(*CreateBeliefRequest_HypothesisEvidence); ok {
		return x.HypothesisEvidence
	}
	return nil
}

func (x *CreateBeliefRequest) GetActionOutcome() *models.ActionOutcomeInteraction {
	if x, ok := x.GetEvidence().(*CreateBeliefRequest_ActionOutcome); ok {
		return x.ActionOutcome
	}
	return nil
}

type isCreateBeliefRequest_Evidence interface {
	isCreateBeliefRequest_Evidence()
}

type CreateBeliefRequest_HypothesisEvidence struct {
	HypothesisEvidence *models.HypothesisEvidenceInteraction `protobuf:"bytes,4,opt,name=hypothesis_evidence,json=hypothesisEvidence,proto3,oneof"`
}

type CreateBeliefRequest_ActionOutcome struct {
	ActionOutcome *models.ActionOutcomeInteraction `protobuf:"bytes,5,opt,name=action_outcome,json=actionOutcome,proto3,oneof"`
}

func (*CreateBeliefRequest_HypothesisEvidence) isCreateBeliefRequest_Evidence() {}

func (*CreateBeliefRequest_ActionOutcome) isCreateBeliefRequest_Evidence() {}

// Response message for creating a new belief.
type CreateBeliefResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Belief       *models.Belief       `protobuf:"bytes,1,opt,name=belief,proto3" json:"belief,omitempty"`
	BeliefSystem *models.BeliefSystem `protobuf:"bytes,2,opt,name=belief_system,json=beliefSystem,proto3" json:"belief_system,omitempty"`
}

func (x *CreateBeliefResponse) Reset() {
	*x = CreateBeliefResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeliefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeliefResponse) ProtoMessage() {}

func (x *CreateBeliefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeliefResponse.ProtoReflect.Descriptor instead.
func (*CreateBeliefResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{3}
}

func (x *CreateBeliefResponse) GetBelief() *models.Belief {
	if x != nil {
		return x.Belief
	}
	return nil
}

func (x *CreateBeliefResponse) GetBeliefSystem() *models.BeliefSystem {
	if x != nil {
		return x.BeliefSystem
	}
	return nil
}

// Request message for creating a new dialectic.
type CreateDialecticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModelId   string               `protobuf:"bytes,1,opt,name=self_model_id,json=selfModelId,proto3" json:"self_model_id,omitempty"`
	DialecticType models.DialecticType `protobuf:"varint,2,opt,name=dialectic_type,json=dialecticType,proto3,enum=DialecticType" json:"dialectic_type,omitempty"`
}

func (x *CreateDialecticRequest) Reset() {
	*x = CreateDialecticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDialecticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDialecticRequest) ProtoMessage() {}

func (x *CreateDialecticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDialecticRequest.ProtoReflect.Descriptor instead.
func (*CreateDialecticRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDialecticRequest) GetSelfModelId() string {
	if x != nil {
		return x.SelfModelId
	}
	return ""
}

func (x *CreateDialecticRequest) GetDialecticType() models.DialecticType {
	if x != nil {
		return x.DialecticType
	}
	return models.DialecticType(0)
}

// Response message for creating a new dialectic.
type CreateDialecticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dialectic *models.Dialectic `protobuf:"bytes,1,opt,name=dialectic,proto3" json:"dialectic,omitempty"`
}

func (x *CreateDialecticResponse) Reset() {
	*x = CreateDialecticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDialecticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDialecticResponse) ProtoMessage() {}

func (x *CreateDialecticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDialecticResponse.ProtoReflect.Descriptor instead.
func (*CreateDialecticResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDialecticResponse) GetDialectic() *models.Dialectic {
	if x != nil {
		return x.Dialectic
	}
	return nil
}

// Request message for listing dialectics.
type ListDialecticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModelId string `protobuf:"bytes,1,opt,name=self_model_id,json=selfModelId,proto3" json:"self_model_id,omitempty"`
}

func (x *ListDialecticsRequest) Reset() {
	*x = ListDialecticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDialecticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDialecticsRequest) ProtoMessage() {}

func (x *ListDialecticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDialecticsRequest.ProtoReflect.Descriptor instead.
func (*ListDialecticsRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{6}
}

func (x *ListDialecticsRequest) GetSelfModelId() string {
	if x != nil {
		return x.SelfModelId
	}
	return ""
}

// Response message for listing dialectics.
type ListDialecticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dialectics []*models.Dialectic `protobuf:"bytes,1,rep,name=dialectics,proto3" json:"dialectics,omitempty"`
}

func (x *ListDialecticsResponse) Reset() {
	*x = ListDialecticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDialecticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDialecticsResponse) ProtoMessage() {}

func (x *ListDialecticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDialecticsResponse.ProtoReflect.Descriptor instead.
func (*ListDialecticsResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{7}
}

func (x *ListDialecticsResponse) GetDialectics() []*models.Dialectic {
	if x != nil {
		return x.Dialectics
	}
	return nil
}

// Request message for updating an existing dialectic.
type UpdateDialecticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Answer      *models.UserAnswer `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	SelfModelId string             `protobuf:"bytes,3,opt,name=self_model_id,json=selfModelId,proto3" json:"self_model_id,omitempty"`
	DryRun      bool               `protobuf:"varint,4,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
}

func (x *UpdateDialecticRequest) Reset() {
	*x = UpdateDialecticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDialecticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDialecticRequest) ProtoMessage() {}

func (x *UpdateDialecticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDialecticRequest.ProtoReflect.Descriptor instead.
func (*UpdateDialecticRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateDialecticRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDialecticRequest) GetAnswer() *models.UserAnswer {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *UpdateDialecticRequest) GetSelfModelId() string {
	if x != nil {
		return x.SelfModelId
	}
	return ""
}

func (x *UpdateDialecticRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

// Response message for updating an existing dialectic.
type UpdateDialecticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dialectic *models.Dialectic `protobuf:"bytes,1,opt,name=dialectic,proto3" json:"dialectic,omitempty"`
}

func (x *UpdateDialecticResponse) Reset() {
	*x = UpdateDialecticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDialecticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDialecticResponse) ProtoMessage() {}

func (x *UpdateDialecticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDialecticResponse.ProtoReflect.Descriptor instead.
func (*UpdateDialecticResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDialecticResponse) GetDialectic() *models.Dialectic {
	if x != nil {
		return x.Dialectic
	}
	return nil
}

type GetBeliefSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModelId    string `protobuf:"bytes,1,opt,name=self_model_id,json=selfModelId,proto3" json:"self_model_id,omitempty"`
	IncludeMetrics bool   `protobuf:"varint,2,opt,name=include_metrics,json=includeMetrics,proto3" json:"include_metrics,omitempty"`
	Conceptualize  bool   `protobuf:"varint,3,opt,name=conceptualize,proto3" json:"conceptualize,omitempty"`
}

func (x *GetBeliefSystemRequest) Reset() {
	*x = GetBeliefSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBeliefSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBeliefSystemRequest) ProtoMessage() {}

func (x *GetBeliefSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBeliefSystemRequest.ProtoReflect.Descriptor instead.
func (*GetBeliefSystemRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{10}
}

func (x *GetBeliefSystemRequest) GetSelfModelId() string {
	if x != nil {
		return x.SelfModelId
	}
	return ""
}

func (x *GetBeliefSystemRequest) GetIncludeMetrics() bool {
	if x != nil {
		return x.IncludeMetrics
	}
	return false
}

func (x *GetBeliefSystemRequest) GetConceptualize() bool {
	if x != nil {
		return x.Conceptualize
	}
	return false
}

type GetBeliefSystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeliefSystem *models.BeliefSystem `protobuf:"bytes,1,opt,name=belief_system,json=beliefSystem,proto3" json:"belief_system,omitempty"`
}

func (x *GetBeliefSystemResponse) Reset() {
	*x = GetBeliefSystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBeliefSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBeliefSystemResponse) ProtoMessage() {}

func (x *GetBeliefSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBeliefSystemResponse.ProtoReflect.Descriptor instead.
func (*GetBeliefSystemResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{11}
}

func (x *GetBeliefSystemResponse) GetBeliefSystem() *models.BeliefSystem {
	if x != nil {
		return x.BeliefSystem
	}
	return nil
}

type UpdateKeyValueStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializedKvStore []byte `protobuf:"bytes,1,opt,name=serialized_kv_store,json=serializedKvStore,proto3" json:"serialized_kv_store,omitempty"`
}

func (x *UpdateKeyValueStoreRequest) Reset() {
	*x = UpdateKeyValueStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKeyValueStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKeyValueStoreRequest) ProtoMessage() {}

func (x *UpdateKeyValueStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKeyValueStoreRequest.ProtoReflect.Descriptor instead.
func (*UpdateKeyValueStoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateKeyValueStoreRequest) GetSerializedKvStore() []byte {
	if x != nil {
		return x.SerializedKvStore
	}
	return nil
}

type UpdateKeyValueStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateKeyValueStoreResponse) Reset() {
	*x = UpdateKeyValueStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKeyValueStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKeyValueStoreResponse) ProtoMessage() {}

func (x *UpdateKeyValueStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKeyValueStoreResponse.ProtoReflect.Descriptor instead.
func (*UpdateKeyValueStoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateKeyValueStoreResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreateSelfModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Philosophies []string `protobuf:"bytes,2,rep,name=philosophies,proto3" json:"philosophies,omitempty"`
}

func (x *CreateSelfModelRequest) Reset() {
	*x = CreateSelfModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSelfModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSelfModelRequest) ProtoMessage() {}

func (x *CreateSelfModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSelfModelRequest.ProtoReflect.Descriptor instead.
func (*CreateSelfModelRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{14}
}

func (x *CreateSelfModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSelfModelRequest) GetPhilosophies() []string {
	if x != nil {
		return x.Philosophies
	}
	return nil
}

type CreateSelfModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModel *models.SelfModel `protobuf:"bytes,1,opt,name=self_model,json=selfModel,proto3" json:"self_model,omitempty"`
}

func (x *CreateSelfModelResponse) Reset() {
	*x = CreateSelfModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSelfModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSelfModelResponse) ProtoMessage() {}

func (x *CreateSelfModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSelfModelResponse.ProtoReflect.Descriptor instead.
func (*CreateSelfModelResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{15}
}

func (x *CreateSelfModelResponse) GetSelfModel() *models.SelfModel {
	if x != nil {
		return x.SelfModel
	}
	return nil
}

type GetSelfModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModelId string `protobuf:"bytes,1,opt,name=self_model_id,json=selfModelId,proto3" json:"self_model_id,omitempty"`
}

func (x *GetSelfModelRequest) Reset() {
	*x = GetSelfModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelfModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfModelRequest) ProtoMessage() {}

func (x *GetSelfModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfModelRequest.ProtoReflect.Descriptor instead.
func (*GetSelfModelRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{16}
}

func (x *GetSelfModelRequest) GetSelfModelId() string {
	if x != nil {
		return x.SelfModelId
	}
	return ""
}

type GetSelfModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModel *models.SelfModel `protobuf:"bytes,1,opt,name=self_model,json=selfModel,proto3" json:"self_model,omitempty"`
}

func (x *GetSelfModelResponse) Reset() {
	*x = GetSelfModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelfModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfModelResponse) ProtoMessage() {}

func (x *GetSelfModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfModelResponse.ProtoReflect.Descriptor instead.
func (*GetSelfModelResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{17}
}

func (x *GetSelfModelResponse) GetSelfModel() *models.SelfModel {
	if x != nil {
		return x.SelfModel
	}
	return nil
}

type AddPhilosophyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfModelId  string `protobuf:"bytes,1,opt,name=self_model_id,json=selfModelId,proto3" json:"self_model_id,omitempty"`
	PhilosophyId string `protobuf:"bytes,2,opt,name=philosophy_id,json=philosophyId,proto3" json:"philosophy_id,omitempty"`
}

func (x *AddPhilosophyRequest) Reset() {
	*x = AddPhilosophyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPhilosophyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPhilosophyRequest) ProtoMessage() {}

func (x *AddPhilosophyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPhilosophyRequest.ProtoReflect.Descriptor instead.
func (*AddPhilosophyRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{18}
}

func (x *AddPhilosophyRequest) GetSelfModelId() string {
	if x != nil {
		return x.SelfModelId
	}
	return ""
}

func (x *AddPhilosophyRequest) GetPhilosophyId() string {
	if x != nil {
		return x.PhilosophyId
	}
	return ""
}

type AddPhilosophyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedSelfModel *models.SelfModel `protobuf:"bytes,1,opt,name=updated_self_model,json=updatedSelfModel,proto3" json:"updated_self_model,omitempty"`
}

func (x *AddPhilosophyResponse) Reset() {
	*x = AddPhilosophyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPhilosophyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPhilosophyResponse) ProtoMessage() {}

func (x *AddPhilosophyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPhilosophyResponse.ProtoReflect.Descriptor instead.
func (*AddPhilosophyResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{19}
}

func (x *AddPhilosophyResponse) GetUpdatedSelfModel() *models.SelfModel {
	if x != nil {
		return x.UpdatedSelfModel
	}
	return nil
}

type CreatePhilosophyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description         string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	ExtrapolateContexts bool   `protobuf:"varint,2,opt,name=extrapolate_contexts,json=extrapolateContexts,proto3" json:"extrapolate_contexts,omitempty"`
}

func (x *CreatePhilosophyRequest) Reset() {
	*x = CreatePhilosophyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhilosophyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhilosophyRequest) ProtoMessage() {}

func (x *CreatePhilosophyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhilosophyRequest.ProtoReflect.Descriptor instead.
func (*CreatePhilosophyRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{20}
}

func (x *CreatePhilosophyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePhilosophyRequest) GetExtrapolateContexts() bool {
	if x != nil {
		return x.ExtrapolateContexts
	}
	return false
}

type CreatePhilosophyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Philosophy *models.Philosophy `protobuf:"bytes,1,opt,name=philosophy,proto3" json:"philosophy,omitempty"`
}

func (x *CreatePhilosophyResponse) Reset() {
	*x = CreatePhilosophyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhilosophyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhilosophyResponse) ProtoMessage() {}

func (x *CreatePhilosophyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhilosophyResponse.ProtoReflect.Descriptor instead.
func (*CreatePhilosophyResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{21}
}

func (x *CreatePhilosophyResponse) GetPhilosophy() *models.Philosophy {
	if x != nil {
		return x.Philosophy
	}
	return nil
}

type CreateDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CreateDeveloperRequest) Reset() {
	*x = CreateDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeveloperRequest) ProtoMessage() {}

func (x *CreateDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeveloperRequest.ProtoReflect.Descriptor instead.
func (*CreateDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{22}
}

func (x *CreateDeveloperRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDeveloperRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CreateDeveloperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Developer *models.Developer `protobuf:"bytes,1,opt,name=developer,proto3" json:"developer,omitempty"`
}

func (x *CreateDeveloperResponse) Reset() {
	*x = CreateDeveloperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeveloperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeveloperResponse) ProtoMessage() {}

func (x *CreateDeveloperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeveloperResponse.ProtoReflect.Descriptor instead.
func (*CreateDeveloperResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{23}
}

func (x *CreateDeveloperResponse) GetDeveloper() *models.Developer {
	if x != nil {
		return x.Developer
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId string `protobuf:"bytes,1,opt,name=developer_id,json=developerId,proto3" json:"developer_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{24}
}

func (x *CreateUserRequest) GetDeveloperId() string {
	if x != nil {
		return x.DeveloperId
	}
	return ""
}

func (x *CreateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *models.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{25}
}

func (x *CreateUserResponse) GetUser() *models.User {
	if x != nil {
		return x.User
	}
	return nil
}

type GetDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeveloperRequest) Reset() {
	*x = GetDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeveloperRequest) ProtoMessage() {}

func (x *GetDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeveloperRequest.ProtoReflect.Descriptor instead.
func (*GetDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{26}
}

func (x *GetDeveloperRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeveloperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Developer *models.Developer `protobuf:"bytes,1,opt,name=developer,proto3" json:"developer,omitempty"`
}

func (x *GetDeveloperResponse) Reset() {
	*x = GetDeveloperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_epistemic_me_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeveloperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeveloperResponse) ProtoMessage() {}

func (x *GetDeveloperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_epistemic_me_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeveloperResponse.ProtoReflect.Descriptor instead.
func (*GetDeveloperResponse) Descriptor() ([]byte, []int) {
	return file_proto_epistemic_me_proto_rawDescGZIP(), []int{27}
}

func (x *GetDeveloperResponse) GetDeveloper() *models.Developer {
	if x != nil {
		return x.Developer
	}
	return nil
}

var File_proto_epistemic_me_proto protoreflect.FileDescriptor

var file_proto_epistemic_me_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x70, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x69,
	0x63, 0x5f, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66,
	0x49, 0x64, 0x73, 0x22, 0x6c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65,
	0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x62, 0x65,
	0x6c, 0x69, 0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65,
	0x6c, 0x69, 0x65, 0x66, 0x52, 0x07, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x73, 0x12, 0x32, 0x0a,
	0x0d, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x52, 0x0c, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x22, 0xb1, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6c, 0x69,
	0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6c,
	0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x42, 0x65, 0x6c, 0x69,
	0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x51, 0x0a, 0x13, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x5f, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x45, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x12, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x45, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x65, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x65, 0x6c, 0x69, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x06, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x52, 0x06, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x12, 0x32,
	0x0a, 0x0d, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x22, 0x73, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x63, 0x52, 0x09, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x22, 0x3b, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x63, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x73, 0x22,
	0x8a, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x22, 0x43, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x64, 0x69, 0x61, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x69, 0x61,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x52, 0x09, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x63, 0x22, 0x8b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x22,
	0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x62, 0x65,
	0x6c, 0x69, 0x65, 0x66, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x0c, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x4c,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6b, 0x76, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4b, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x37, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x68, 0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x68, 0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68,
	0x69, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c,
	0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09,
	0x73, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x39, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x0a,
	0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09, 0x73, 0x65,
	0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x5f, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x50, 0x68,
	0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x68, 0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x68, 0x69, 0x6c,
	0x6f, 0x73, 0x6f, 0x70, 0x68, 0x79, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50,
	0x68, 0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x6c,
	0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x6e, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x78, 0x74, 0x72, 0x61, 0x70, 0x6f, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x70, 0x68, 0x69, 0x6c, 0x6f,
	0x73, 0x6f, 0x70, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x68,
	0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68, 0x79, 0x52, 0x0a, 0x70, 0x68, 0x69, 0x6c, 0x6f, 0x73,
	0x6f, 0x70, 0x68, 0x79, 0x22, 0x42, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x43, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x52, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22, 0x60, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x2f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x09,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x32, 0x87, 0x07, 0x0a, 0x12, 0x45, 0x70,
	0x69, 0x73, 0x74, 0x65, 0x6d, 0x69, 0x63, 0x4d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66,
	0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x65, 0x6c, 0x69, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x73, 0x12, 0x13,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x12, 0x17,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x63, 0x73, 0x12, 0x16, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x61, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x12, 0x17, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x1b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x17, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x68, 0x69, 0x6c, 0x6f, 0x73,
	0x6f, 0x70, 0x68, 0x79, 0x12, 0x15, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x68, 0x69, 0x6c, 0x6f, 0x73,
	0x6f, 0x70, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x68, 0x69, 0x6c, 0x6f, 0x73, 0x6f, 0x70, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x65, 0x70, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x69, 0x63,
	0x2d, 0x6d, 0x65, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_epistemic_me_proto_rawDescOnce sync.Once
	file_proto_epistemic_me_proto_rawDescData = file_proto_epistemic_me_proto_rawDesc
)

func file_proto_epistemic_me_proto_rawDescGZIP() []byte {
	file_proto_epistemic_me_proto_rawDescOnce.Do(func() {
		file_proto_epistemic_me_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_epistemic_me_proto_rawDescData)
	})
	return file_proto_epistemic_me_proto_rawDescData
}

var file_proto_epistemic_me_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_proto_epistemic_me_proto_goTypes = []any{
	(*ListBeliefsRequest)(nil),                   // 0: ListBeliefsRequest
	(*ListBeliefsResponse)(nil),                  // 1: ListBeliefsResponse
	(*CreateBeliefRequest)(nil),                  // 2: CreateBeliefRequest
	(*CreateBeliefResponse)(nil),                 // 3: CreateBeliefResponse
	(*CreateDialecticRequest)(nil),               // 4: CreateDialecticRequest
	(*CreateDialecticResponse)(nil),              // 5: CreateDialecticResponse
	(*ListDialecticsRequest)(nil),                // 6: ListDialecticsRequest
	(*ListDialecticsResponse)(nil),               // 7: ListDialecticsResponse
	(*UpdateDialecticRequest)(nil),               // 8: UpdateDialecticRequest
	(*UpdateDialecticResponse)(nil),              // 9: UpdateDialecticResponse
	(*GetBeliefSystemRequest)(nil),               // 10: GetBeliefSystemRequest
	(*GetBeliefSystemResponse)(nil),              // 11: GetBeliefSystemResponse
	(*UpdateKeyValueStoreRequest)(nil),           // 12: UpdateKeyValueStoreRequest
	(*UpdateKeyValueStoreResponse)(nil),          // 13: UpdateKeyValueStoreResponse
	(*CreateSelfModelRequest)(nil),               // 14: CreateSelfModelRequest
	(*CreateSelfModelResponse)(nil),              // 15: CreateSelfModelResponse
	(*GetSelfModelRequest)(nil),                  // 16: GetSelfModelRequest
	(*GetSelfModelResponse)(nil),                 // 17: GetSelfModelResponse
	(*AddPhilosophyRequest)(nil),                 // 18: AddPhilosophyRequest
	(*AddPhilosophyResponse)(nil),                // 19: AddPhilosophyResponse
	(*CreatePhilosophyRequest)(nil),              // 20: CreatePhilosophyRequest
	(*CreatePhilosophyResponse)(nil),             // 21: CreatePhilosophyResponse
	(*CreateDeveloperRequest)(nil),               // 22: CreateDeveloperRequest
	(*CreateDeveloperResponse)(nil),              // 23: CreateDeveloperResponse
	(*CreateUserRequest)(nil),                    // 24: CreateUserRequest
	(*CreateUserResponse)(nil),                   // 25: CreateUserResponse
	(*GetDeveloperRequest)(nil),                  // 26: GetDeveloperRequest
	(*GetDeveloperResponse)(nil),                 // 27: GetDeveloperResponse
	(*models.Belief)(nil),                        // 28: Belief
	(*models.BeliefSystem)(nil),                  // 29: BeliefSystem
	(models.BeliefType)(0),                       // 30: BeliefType
	(*models.HypothesisEvidenceInteraction)(nil), // 31: HypothesisEvidenceInteraction
	(*models.ActionOutcomeInteraction)(nil),      // 32: ActionOutcomeInteraction
	(models.DialecticType)(0),                    // 33: DialecticType
	(*models.Dialectic)(nil),                     // 34: Dialectic
	(*models.UserAnswer)(nil),                    // 35: UserAnswer
	(*models.SelfModel)(nil),                     // 36: SelfModel
	(*models.Philosophy)(nil),                    // 37: Philosophy
	(*models.Developer)(nil),                     // 38: Developer
	(*models.User)(nil),                          // 39: User
}
var file_proto_epistemic_me_proto_depIdxs = []int32{
	28, // 0: ListBeliefsResponse.beliefs:type_name -> Belief
	29, // 1: ListBeliefsResponse.belief_system:type_name -> BeliefSystem
	30, // 2: CreateBeliefRequest.belief_type:type_name -> BeliefType
	31, // 3: CreateBeliefRequest.hypothesis_evidence:type_name -> HypothesisEvidenceInteraction
	32, // 4: CreateBeliefRequest.action_outcome:type_name -> ActionOutcomeInteraction
	28, // 5: CreateBeliefResponse.belief:type_name -> Belief
	29, // 6: CreateBeliefResponse.belief_system:type_name -> BeliefSystem
	33, // 7: CreateDialecticRequest.dialectic_type:type_name -> DialecticType
	34, // 8: CreateDialecticResponse.dialectic:type_name -> Dialectic
	34, // 9: ListDialecticsResponse.dialectics:type_name -> Dialectic
	35, // 10: UpdateDialecticRequest.answer:type_name -> UserAnswer
	34, // 11: UpdateDialecticResponse.dialectic:type_name -> Dialectic
	29, // 12: GetBeliefSystemResponse.belief_system:type_name -> BeliefSystem
	36, // 13: CreateSelfModelResponse.self_model:type_name -> SelfModel
	36, // 14: GetSelfModelResponse.self_model:type_name -> SelfModel
	36, // 15: AddPhilosophyResponse.updated_self_model:type_name -> SelfModel
	37, // 16: CreatePhilosophyResponse.philosophy:type_name -> Philosophy
	38, // 17: CreateDeveloperResponse.developer:type_name -> Developer
	39, // 18: CreateUserResponse.user:type_name -> User
	38, // 19: GetDeveloperResponse.developer:type_name -> Developer
	2,  // 20: EpistemicMeService.CreateBelief:input_type -> CreateBeliefRequest
	0,  // 21: EpistemicMeService.ListBeliefs:input_type -> ListBeliefsRequest
	4,  // 22: EpistemicMeService.CreateDialectic:input_type -> CreateDialecticRequest
	6,  // 23: EpistemicMeService.ListDialectics:input_type -> ListDialecticsRequest
	8,  // 24: EpistemicMeService.UpdateDialectic:input_type -> UpdateDialecticRequest
	10, // 25: EpistemicMeService.GetBeliefSystem:input_type -> GetBeliefSystemRequest
	12, // 26: EpistemicMeService.UpdateKeyValueStore:input_type -> UpdateKeyValueStoreRequest
	14, // 27: EpistemicMeService.CreateSelfModel:input_type -> CreateSelfModelRequest
	16, // 28: EpistemicMeService.GetSelfModel:input_type -> GetSelfModelRequest
	18, // 29: EpistemicMeService.AddPhilosophy:input_type -> AddPhilosophyRequest
	22, // 30: EpistemicMeService.CreateDeveloper:input_type -> CreateDeveloperRequest
	24, // 31: EpistemicMeService.CreateUser:input_type -> CreateUserRequest
	26, // 32: EpistemicMeService.GetDeveloper:input_type -> GetDeveloperRequest
	3,  // 33: EpistemicMeService.CreateBelief:output_type -> CreateBeliefResponse
	1,  // 34: EpistemicMeService.ListBeliefs:output_type -> ListBeliefsResponse
	5,  // 35: EpistemicMeService.CreateDialectic:output_type -> CreateDialecticResponse
	7,  // 36: EpistemicMeService.ListDialectics:output_type -> ListDialecticsResponse
	9,  // 37: EpistemicMeService.UpdateDialectic:output_type -> UpdateDialecticResponse
	11, // 38: EpistemicMeService.GetBeliefSystem:output_type -> GetBeliefSystemResponse
	13, // 39: EpistemicMeService.UpdateKeyValueStore:output_type -> UpdateKeyValueStoreResponse
	15, // 40: EpistemicMeService.CreateSelfModel:output_type -> CreateSelfModelResponse
	17, // 41: EpistemicMeService.GetSelfModel:output_type -> GetSelfModelResponse
	19, // 42: EpistemicMeService.AddPhilosophy:output_type -> AddPhilosophyResponse
	23, // 43: EpistemicMeService.CreateDeveloper:output_type -> CreateDeveloperResponse
	25, // 44: EpistemicMeService.CreateUser:output_type -> CreateUserResponse
	27, // 45: EpistemicMeService.GetDeveloper:output_type -> GetDeveloperResponse
	33, // [33:46] is the sub-list for method output_type
	20, // [20:33] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_epistemic_me_proto_init() }
func file_proto_epistemic_me_proto_init() {
	if File_proto_epistemic_me_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_epistemic_me_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeliefsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeliefsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateBeliefRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateBeliefResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDialecticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDialecticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListDialecticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListDialecticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDialecticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDialecticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetBeliefSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetBeliefSystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateKeyValueStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateKeyValueStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSelfModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSelfModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetSelfModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetSelfModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*AddPhilosophyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*AddPhilosophyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePhilosophyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePhilosophyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDeveloperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_epistemic_me_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetDeveloperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_epistemic_me_proto_msgTypes[2].OneofWrappers = []any{
		(*CreateBeliefRequest_HypothesisEvidence)(nil),
		(*CreateBeliefRequest_ActionOutcome)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_epistemic_me_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_epistemic_me_proto_goTypes,
		DependencyIndexes: file_proto_epistemic_me_proto_depIdxs,
		MessageInfos:      file_proto_epistemic_me_proto_msgTypes,
	}.Build()
	File_proto_epistemic_me_proto = out.File
	file_proto_epistemic_me_proto_rawDesc = nil
	file_proto_epistemic_me_proto_goTypes = nil
	file_proto_epistemic_me_proto_depIdxs = nil
}
